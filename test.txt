from sbsdsfn: So now we're going to combine all this together. We're going to read some data, we're going to read a file, we're going to make some dictionaries, we're going to make some lists. And we're going to use all these things to build a real program. So what the real program is going to solve... and so let's see if you can solve this, right? Read this text really quick, like in a hundredth of a second or so and figure out what the most common word is and how many of these things there are. It's kind of like the problem we showed you before, except I was showing you names. So figure it out. What is the most common word and how many are there? Or maybe, let's just skip to the next slide, because humans are so bad at this. I mean, humans are looking at this and saying like, um, no, I refuse to do this, as compared to the other ones we actually tried. Now we're not even going to try. It's like dude, how about we just write some Python code to solve this problem? I know how this turns out. We've seen this story before. Okay. So here's the basic pattern. We're going to use a dictionary. We're going to use split. Split gives us back a list. And then we're going to loop through the list and then we're going to do the histogram pattern so we can go through the list. So this program, which we'll soon switch to reading a whole file, but for now we're just going to read a single line. Then we just learn how to write another loop outside this loop. So here's what we do. We start out, we make a dictionary. We read a line of text type, type, type, type, type. Line of text goes into this variable line, then we split it. Right? And then we get back a list of words. We're going to print those words out. And then what we're doing is whatever that line was, we're going to loop through the words. You know word, word, word, word - whatever it is, word - whatever's on that line. And then we're going to update the count. And so this is that little idiom. We're going to grab the old value of our count for the particular word we're looking at, or 0, add 1 to it, and stick it back in. So this is both going to do the new and the existing. So that's the basic program. We're just, we're doing exactly what we did before, except now we are taking a line from input and we're making the list of words by using the split function. You get the idea now. So here we're going to run this with a bit of code. Here's our long line of text. I have to break it so it fits on my screen. The clown ran after the car and the car ran into the tent and the, the, the, the So that gets put into the variable. Then it splits it and this is the words. So this is just taking this line of text and breaking it based on spaces. And then we get a list of, you know, 15, 20 or so words. Then we write the loop that loops through each one of these things and makes a little histogram for every word. You know, the, clown, you know, ran, then it's after, and then the gets another one because we get the the and the car gets another one and we see these things and these grow up, you know? And that's what we're doing down here when there's no output. We could put output there, but it wouldn't fit on my screen. And then at the very end, we're going to print all these counts out. Okay? And then we can look and see oh, the, the thing with the highest histogram is "the" is the one with the highest histogram. So that's how that code ultimately runs, right? So if we look through it again, we make a dictionary, we take this line of text and we put it into this variable, then we split it into words. And then we have this word that goes iteration across this, the words in a line. And then we do the counting trick. And then at the end we print all these things out and we can see the largest one. Okay? So that's, that's a common pattern in text processing, looking for words. Now, let's talk a little bit more about some of the capabilities of dictionaries. We've used for loops to go through strings. We've used for loops to go through files. We've used for loops to go through lists and now we're going to use a for loop to go through a dictionary. Again, for some iteration variable in some collection. And so what, what you do here is, not because I named it key, key's a great name for it, but key is going to take on the successive value of the keys, not the values. Okay? It's not going to go through the values. In the list, it goes through the values, but in a dictionary, it goes through the keys. So it's going to print out Jan, Chuck, and Fred. Remember order, order doesn't matter. I mean, order's unpredictable inside of dictionaries. Now if I actually want to get these values, then I just say counts sub key, right? And so key is whatever - Jan, Chuck, and Fred And so this is counts sub Jan, counts, counts sub Chuck, and counts sub Fred. And so that's how we go through the key-value pairs in a very, very simple for loop. Just remember, if you just put the name of a dictionary here, the loop is going to go through the keys in the dictionary, not the values in the dictionary, but you can get every value. Just say counts sub key, or whatever the dictionary name is sub key. And so what you can do here is, you can kind of see what's going on, is we can actually tell Python what we're doing right here is we're telling Python to convert this dictionary variable to a list. So lists have less information and that ends up giving the keys, right?